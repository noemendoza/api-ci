jobs:
  build:
    docker:

      - image: circleci/node:10.24.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
     # run tests!
      #- run: yarn test
 
  test_docker:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.24.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install `docker-compose`
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker:
          docker_layer_caching: false 
      - run:
          name: Build using `docker-compose`
          command: |
            docker-compose build
      - run:
          name: Creating Network
          command: |
            docker network create proxy
      - run:
          name: Up docker compose
          command: |
            docker-compose up -d
      - run:
          name: Get docker name
          command: |
            docker-compose ps

      - run:
          name: Start container and verify it's working
          command: |
            set -x

            docker run --network container:repo_api_1 \
              appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:3001/api/version            
              

      - run:

          name: docker-compose down
          command: docker-compose down
      # run tests!
      #- run: yarn test
 
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test_docker:
          type: 
            - approval
          requires:
            - build